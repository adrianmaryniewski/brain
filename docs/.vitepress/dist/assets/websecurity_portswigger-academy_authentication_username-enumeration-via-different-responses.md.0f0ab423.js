import{_ as e,c as t,o as r,N as s}from"./chunks/framework.0799945b.js";const d=JSON.parse('{"title":"Username Enumeration via Different Responses","description":"","frontmatter":{},"headers":[],"relativePath":"websecurity/portswigger-academy/authentication/username-enumeration-via-different-responses.md"}'),a={name:"websecurity/portswigger-academy/authentication/username-enumeration-via-different-responses.md"},n=s('<h1 id="username-enumeration-via-different-responses" tabindex="-1">Username Enumeration via Different Responses <a class="header-anchor" href="#username-enumeration-via-different-responses" aria-label="Permalink to &quot;Username Enumeration via Different Responses&quot;">​</a></h1><p>Link: <a href="https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-different-responses" target="_blank" rel="noreferrer">https://portswigger.net/web-security/authentication/password-based/lab-username-enumeration-via-different-responses</a></p><p>In this lab, we explore what the login process looks like and how users are informed when incorrect credentials are used.</p><p>For this exercise, we will use two lists that we see even before clicking &quot;Access the lab&quot;:</p><ul><li>Candidate usernames - <a href="https://portswigger.net/web-security/authentication/auth-lab-usernames" target="_blank" rel="noreferrer">https://portswigger.net/web-security/authentication/auth-lab-usernames</a></li><li>Candidate passwords - <a href="https://portswigger.net/web-security/authentication/auth-lab-passwords" target="_blank" rel="noreferrer">https://portswigger.net/web-security/authentication/auth-lab-passwords</a></li></ul><hr><p>Upon entering the lab, we are presented with this page:</p><p><img src="https://www.dropbox.com/scl/fi/9tfxg0jxashc9p61s05rb/pb-CNZMQQO0GB.png?rlkey=98m0lpza64g2qt9rtsd6k1n3c&amp;raw=1" alt="Username enumeration via different responses main page"></p><p>We click on &quot;<strong>My Account</strong>&quot; because we want to access the section related to &quot;authentication&quot;.</p><p>We see the login panel:</p><p><img src="https://www.dropbox.com/scl/fi/yckqc3gukq0rg16je71sl/pb-tQ2EIQK2ne.png?rlkey=erous2ndpefg1we18lvgigynz&amp;raw=1" alt="Username enumeration via different responses login panel"></p><p>Let&#39;s try to enter a made-up username and password, for example, adrian:password.</p><p>We see the message: &quot;Invalid username&quot;:</p><p><img src="https://www.dropbox.com/scl/fi/p0s2nb7fchnrp2ehfu7l3/pb-ONUwG4Urcq.png?rlkey=39hqwzfp41e03vw1u6tstdrr5&amp;raw=1" alt="invalid username"></p><p>This likely means that there is no user with such a username in the system.</p><p>It&#39;s worth noting here that the error message should not reveal such information.</p><p>What instead? A better practice is to provide information like: &quot;<strong>Invalid username or password</strong>&quot;, so as not to directly inform what was entered incorrectly.</p><p>Let&#39;s move on to Burp Suite to see what the HTTP communication looked like:</p><p><img src="https://www.dropbox.com/scl/fi/n5ycvbnjbnkg0g901vmz8/pb-1f3UkhYsei.png?rlkey=hdkkawie8l0zeh53mwtw5yedf&amp;raw=1" alt="burp suite http communication"></p><p>This is the POST request we used to log in.</p><p>I will use the <em><strong>Intruder</strong></em> tool to check if I can determine which of the list&#39;s users is the correct user.</p><p>I click on the request, selecting &quot;<em><strong>Send to Intruder</strong></em>&quot;:</p><p><img src="https://www.dropbox.com/scl/fi/decgh0sbxf92wh9r8kjlw/pb-hG7lnvT6k5.png?rlkey=oft47h5x31ia5vvqzmt3xbwvh&amp;raw=1" alt="send to intruder"></p><p>I go to the &quot;<strong>Intruder</strong>&quot; tab. In it, I select my &quot;username&quot; (line 23):</p><p><img src="https://www.dropbox.com/scl/fi/m73544hto1ccgqki6zsrz/pb-5Ip24I6cDI.png?rlkey=e51p337pygd0hwbm2p4z2440r&amp;raw=1" alt="username in intruder"></p><p>I click on the right side on &quot;<strong>Add §</strong>&quot; - so that &quot;Intruder&quot; takes this particular value into account and substitutes the list values that we will upload shortly.</p><p>We move to the &quot;<strong>Payloads</strong>&quot; tab:</p><p><img src="https://www.dropbox.com/scl/fi/wy7yjuafzfp46kth0muyz/pb-jDf34Ulc1n.png?rlkey=gymptpqv196hmarymhdj4xd61&amp;raw=1" alt="payloads tab"></p><p>From the page with usernames ( <a href="https://portswigger.net/web-security/authentication/auth-lab-usernames" target="_blank" rel="noreferrer">https://portswigger.net/web-security/authentication/auth-lab-usernames</a> ), I copy all the usernames and paste them by clicking the &quot;<strong>Paste</strong>&quot; button:</p><p><img src="https://www.dropbox.com/scl/fi/107ezw13oicg2w28y3314/pb-7KIeGAIqD3.png?rlkey=ompdjp43ycfhow5ha17n3t96v&amp;raw=1" alt="paste the usernames"></p><p>After clicking &quot;<strong>Paste</strong>&quot;:</p><p><img src="https://www.dropbox.com/scl/fi/vtub86lw3cpw78bi3azlk/pb-nU46v86ibc.png?rlkey=hcpxm24pc8h7pudsm3sv8nh2t&amp;raw=1" alt="after paste clicking"></p><p>We click on the right side &quot;<strong>Start attack</strong>&quot;, then &quot;<strong>OK</strong>&quot; in the newly appeared window.</p>',33),o=[n];function i(p,u,c,h,l,m){return r(),t("div",null,o)}const g=e(a,[["render",i]]);export{d as __pageData,g as default};
